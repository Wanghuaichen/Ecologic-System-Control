C51 COMPILER V9.00   MAIN                                                                  12/28/2017 15:31:32 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN main.OBJ
COMPILER INVOKED BY: C:\keil\C51\BIN\C51.EXE main.c LARGE OPTIMIZE(8,SPEED) BROWSE INCDIR(.\SRC;.\I2C) DEBUG OBJECTEXTEN
                    -D TABS(2)

line level    source

   1          /*******************************************************************************
   2                             使用资源
   3                        上按键：P2^2
   4                        下按键：P2^3
   5                        左按键：P2^4
   6                        右按键：P2^5
   7                        确认键：P2^6
   8                        调节亮度：P1^0
   9                        热释电控制：P1^7
  10                        OLED：
  11                              时钟 D0（SCLK）：P0^3
  12                              D1（MOSI） 数据：P0^4
  13                              RST：P0^5
  14                              DS：P0^6
  15                              CS：P0^7（片选一般直接接地）
  16                        24C02掉点不丢失：
  17                              SCL：P2^1
  18                              SDA：P2^0
  19          *******************************************************************************/
  20          
  21          
  22          
  23          /*******************************************************************************
  24                        引用头文件定义
  25          *******************************************************************************/
  26          #include "reg52.h"       //此文件中定义了单片机的一些特殊功能寄存器       
  27          #include "oled.h"        //此文件中定义了显示电路函数
  28          #include "interrupt.h"   //此文件中定义了单片机所有中断函数及中断服务函数
  29          #include "i2c.h"         //此文件中定义了24C02存储读取函数
  30          
  31          /*******************************************************************************
  32                        键值定义区
  33          *******************************************************************************/
  34          
  35          #define K_up 1          //上按键赋值1
  36          #define K_down 2        //下按键赋值2
  37          #define K_left 3        //左按键赋值3
  38          #define K_right 4       //右按键赋值4
  39          #define K_ok 5          //确认按键赋值5
  40          
  41          /*******************************************************************************
  42                        变量定义
  43          *******************************************************************************/
  44          int s=0;               //秒
  45          int min=0;             //分
  46          int hour=0;            //小时
  47          int day=0;             //天
  48          int led_num=0;         //计数一次1ms
  49          int count_num=0;       //设置预约时间
  50          int set_s=0;           //设置秒
  51          int set_min=0;         //设置分钟
  52          int rather_s=0;        //比较秒
  53          int led_replay;        //重复led值
  54          int pwm_regulation=0;  //PWM调节值
C51 COMPILER V9.00   MAIN                                                                  12/28/2017 15:31:32 PAGE 2   

  55          int pwm_num=0;         //PWM值
  56          int key;               //键值
  57          
  58          /*******************************************************************************
  59                        引脚定义
  60          *******************************************************************************/
  61          sbit key_ok=P2^6;          //模式1确认键
  62          sbit key_up=P2^2;          //上按键   
  63          sbit key_down=P2^3;        //下按键
  64          sbit key_left=P2^4;        //左按键
  65          sbit key_right=P2^5;       //右按键
  66          sbit pwm=P1^0;             //调节亮度
  67          sbit people_control=P1^7;  //热释电
  68          
  69          /*******************************************************************************
  70                        函数声明
  71          *******************************************************************************/
  72          void led_timer();                       //led点亮时间显示
  73          void delayms(unsigned int z);           //延时函数
  74          int KeyScan(int mode);                  //选择按键模式
  75          void oled_show();                       //oled显示界面
  76          void count_timer();                     //计数时间
  77          void pwm_regulation_led_luminance();    //调节led亮度（调节精度每次5%）
  78          void Key_Control();                     //按键控制
  79          void I2C_Write();                       //掉电存储
  80          void I2C_Read();                        //将存储的数据恢复到上次掉电数据
  81          void I2C_Write_zero();                  //将存储数据清零
  82          
  83          /*******************************************************************************
  84                        标志位定义
  85          *******************************************************************************/
  86          int key_up_flag=0;            //上按键标志位
  87          int key_down_flag=0;          //下按键标志位
  88          int key_left_flag=0;          //左按键标志位
  89          int key_right_flag=0;         //右按键标志位
  90          int led_switch_flag=1;        //led开关标志位
  91          int function_choose_flag=0;   //功能选择标志位
  92          int timer_flag=1;             //计时开始标志位
  93          int key_ok_flag=0;            //确认标志位
  94          
  95          /*******************************************************************************
  96                        主函数运行
  97          *******************************************************************************/
  98          void main()
  99          {
 100   1      //  I2C_Read(); 
 101   1        Timer0Init();     
 102   1      //  UsartInit();                //串口中断初始化
 103   1        OLED_Init();                  //oled显示屏初始化
 104   1        
 105   1        OLED_ShowString(16,0,":");         
 106   1        OLED_ShowString(40,0,":");
 107   1        OLED_ShowString(64,0,":");         
 108   1        OLED_ShowString(0,0,"00");         //天
 109   1        OLED_ShowString(24,0,"00");        //时
 110   1        OLED_ShowString(48,0,"00");        //分
 111   1        OLED_ShowString(72,0,"00");        //秒
 112   1        OLED_ShowString(16,2,"mode:");     //模式
 113   1        OLED_ShowString(16,4,"set_s:");    //设置预约
 114   1        OLED_ShowString(64,6,"000");       //显示预约时间过了多久
 115   1        OLED_ShowString(64,4,"000");       //设置预约时间
 116   1        OLED_ShowString(0,6,"000");        //PWM调节灯光亮度（5%）
C51 COMPILER V9.00   MAIN                                                                  12/28/2017 15:31:32 PAGE 3   

 117   1        OLED_ShowNum(56,2,function_choose_flag,1,16);   //此时设置某个模式
 118   1        OLED_ShowNum(72,0,s,2,16);         //秒
 119   1        OLED_ShowNum(48,0,min,2,16);       //分
 120   1        OLED_ShowNum(24,0,hour,2,16);      //时
 121   1        OLED_ShowNum(0,0,day,2,16);        //天
 122   1        while(1)                     //死循环
 123   1        { 
 124   2        led_replay=pwm_regulation;   //重复定义led目前的状态
 125   2        Key_Control();               //按键控制
 126   2        if(key_up_flag==1)           //判断模式
 127   2        {
 128   3          function_choose_flag++;
 129   3          
 130   3          if(function_choose_flag>4)
 131   3          {
 132   4            function_choose_flag=0;
 133   4          }
 134   3          OLED_ShowNum(56,2,function_choose_flag,1,16);
 135   3        }
 136   2      
 137   2        if(key_down_flag==1)
 138   2        {
 139   3          function_choose_flag--;
 140   3          
 141   3          if(function_choose_flag<0)
 142   3          {
 143   4            function_choose_flag=4;
 144   4          }
 145   3          OLED_ShowNum(56,2,function_choose_flag,1,16);
 146   3        }
 147   2      
 148   2        if(function_choose_flag==0)     //模式0，左按键led灭，定时器0关闭；
 149   2        {                               //右按键led亮，定时器0开启；
 150   3          if(led_switch_flag==1)
 151   3          {
 152   4            pwm_regulation=10;
 153   4            TR0=1;  
 154   4          }
 155   3          else if(led_switch_flag==0)
 156   3          {
 157   4            pwm_regulation=0;
 158   4            TR0=0;
 159   4          }
 160   3        }
 161   2        else if(function_choose_flag==1)   //模式1，上按键加延时时间，下按键减延时时间，确认键进行确认，led亮变灭
             -，灭变亮；
 162   2        {
 163   3          if(key_right_flag==1)
 164   3          {
 165   4            set_s++;
 166   4            if(set_s<5)
 167   4            {
 168   5              set_s=600;
 169   5            }
 170   4            if(set_s>600)
 171   4            {
 172   5              set_s=5;
 173   5            }
 174   4            OLED_ShowNum(64,4,set_s,4,16);        
 175   4          }
 176   3          if(key_left_flag==1)
 177   3          {
C51 COMPILER V9.00   MAIN                                                                  12/28/2017 15:31:32 PAGE 4   

 178   4            set_s--;
 179   4            if(set_s>600)
 180   4            {
 181   5              set_s=5;
 182   5            }
 183   4            if(set_s<5)
 184   4            {
 185   5              set_s=600;
 186   5            }
 187   4            OLED_ShowNum(64,4,set_s,4,16);
 188   4          }
 189   3          if(key_ok_flag==1&&pwm_regulation==0)
 190   3          { 
 191   4            if(set_s==rather_s)
 192   4            {
 193   5              pwm_regulation=10;
 194   5              rather_s=0;
 195   5              key_ok_flag=0;
 196   5              TR0=1;
 197   5            } 
 198   4          }
 199   3          else if(key_ok_flag==1&&pwm_regulation==10)
 200   3          {
 201   4            if(set_s==rather_s)
 202   4            {
 203   5              pwm_regulation=0;
 204   5              rather_s=0;
 205   5              key_ok_flag=0;
 206   5              TR0=0;
 207   5            }
 208   4          }
 209   3        }
 210   2      
 211   2        else if(function_choose_flag==2)    //模式2，热释电控制，监测到人时led亮
 212   2        {
 213   3          if(people_control==1)
 214   3          {
 215   4            pwm_regulation=10;
 216   4            TR0=1;
 217   4          }
 218   3          else if(people_control==0)
 219   3          {
 220   4            pwm_regulation=0;
 221   4            TR0=0;  
 222   4          }
 223   3        }
 224   2      
 225   2        else if(function_choose_flag==3)    //模式3，调节led亮度
 226   2        {
 227   3          if(key_right_flag==1)
 228   3          {
 229   4            pwm_regulation+=1;
 230   4            if(pwm_regulation>10)
 231   4            {
 232   5              pwm_regulation=0;
 233   5            }
 234   4            OLED_ShowNum(0,6,pwm_regulation,3,16);  
 235   4          }
 236   3          if(key_left_flag==1)
 237   3          {
 238   4            pwm_regulation-=1;
 239   4            if(pwm_regulation<0)
C51 COMPILER V9.00   MAIN                                                                  12/28/2017 15:31:32 PAGE 5   

 240   4            {
 241   5              pwm_regulation=10;
 242   5            }
 243   4            OLED_ShowNum(0,6,pwm_regulation,3,16);
 244   4          }
 245   3        }
 246   2          else if(function_choose_flag==4)    //模式4，调节led亮度
 247   2          {
 248   3            if(key_ok_flag==1)
 249   3            {
 250   4            I2C_Write_zero();
 251   4            I2C_Read();
 252   4            OLED_ShowNum(72,0,s,2,16);
 253   4            OLED_ShowNum(48,0,min,2,16);
 254   4            OLED_ShowNum(24,0,hour,2,16);
 255   4            OLED_ShowNum(0,0,day,2,16);
 256   4            key_ok_flag=0;
 257   4            }
 258   3          }
 259   2            led_timer();
 260   2            pwm_regulation_led_luminance();     
 261   2        }
 262   1      }
 263          
 264          /*******************************************************************************
 265          * 函 数 名         : Key_Control()
 266          * 函数功能         :按键扫描控制
 267          * 输    入         : 无
 268          * 输    出         : 无
 269          *******************************************************************************/
 270          void Key_Control()
 271          {
 272   1        key=KeyScan(0);
 273   1        switch(key)        //按键扫描返回不同值
 274   1        {
 275   2          case 0:
 276   2            { key_up_flag=0;
 277   3              key_down_flag=0;
 278   3              key_left_flag=0;
 279   3              key_right_flag=0;
 280   3            } break;
 281   2          case 1:
 282   2              key_up_flag=1;
 283   2              break;
 284   2          case 2:
 285   2              key_down_flag=1;
 286   2              break; 
 287   2          case 3:
 288   2              key_left_flag=1;
 289   2              led_switch_flag=0;
 290   2              break;
 291   2          case 4:
 292   2              key_right_flag=1;
 293   2              led_switch_flag=1;
 294   2              break;
 295   2          case 5:
 296   2              key_ok_flag=1;
 297   2              TR0=1;
 298   2              break;
 299   2          default:
 300   2              break;    
 301   2        }
C51 COMPILER V9.00   MAIN                                                                  12/28/2017 15:31:32 PAGE 6   

 302   1      
 303   1      }
 304          
 305          /*******************************************************************************
 306          * 函 数 名         : delayms()
 307          * 函数功能       :延时函数
 308          * 输    入         : 无
 309          * 输    出         : 无
 310          *******************************************************************************/
 311          void delayms(unsigned int z)//延时函数1ms（12M晶振）
 312          {
 313   1        unsigned int x,y;
 314   1        for(x=z; x>0; x--)
 315   1        for(y=1848; y>0; y--);
 316   1      }
 317          
 318          /*******************************************************************************
 319          * 函 数 名         :int KeyScan(int mode)
 320          * 函数功能         :按键模式选择函数
 321          * 输    入         : 无
 322          * 输    出         : 无
 323          *******************************************************************************/
 324          int KeyScan(int mode)
 325          {
 326   1        static int Keyen=1;
 327   1        if(mode==1)
 328   1        {
 329   2          Keyen=1;
 330   2        }
 331   1        if(Keyen==1&&(key_up==0||key_down==0||key_left==0||key_right==0||key_ok==0))
 332   1        {
 333   2          delayms(10);
 334   2          Keyen=0;
 335   2          if(key_up==0) return K_up;
 336   2          else if(key_down==0) return K_down;
 337   2          else if(key_left==0) return K_left;
 338   2          else if(key_right==0) return K_right;
 339   2          else if(key_ok==0) return K_ok;
 340   2        }
 341   1        else if(key_up==1&&key_down==1&&key_left==1&&key_right==1&&key_ok==1)
 342   1        {
 343   2          Keyen=1;
 344   2        }
 345   1        return 0;
 346   1      }
 347          
 348          /*******************************************************************************
 349          * 函 数 名         :  I2C_Write_zero()
 350          * 函数功能       :延时函数
 351          * 输    入         : 无
 352          * 输    出         : 无
 353          *******************************************************************************/
 354          void I2C_Write_zero()
 355          {
 356   1        At24c02Write(1,0);
 357   1        At24c02Write(2,0);
 358   1        At24c02Write(3,0);
 359   1        At24c02Write(4,0);
 360   1      }
 361          
 362          /*******************************************************************************
 363          * 函 数 名         :  I2C_Write()
C51 COMPILER V9.00   MAIN                                                                  12/28/2017 15:31:32 PAGE 7   

 364          * 函数功能       :延时函数
 365          * 输    入         : 无
 366          * 输    出         : 无
 367          *******************************************************************************/
 368          void I2C_Write()
 369          {
 370   1        At24c02Write(1,s);
 371   1        At24c02Write(2,min);
 372   1        At24c02Write(3,hour);
 373   1        At24c02Write(4,day);
 374   1      }
 375          
 376          /*******************************************************************************
 377          * 函 数 名         : I2C_Read()
 378          * 函数功能       :延时函数
 379          * 输    入         : 无
 380          * 输    出         : 无
 381          *******************************************************************************/
 382          void I2C_Read()
 383          {
 384   1        s=At24c02Read(1);
 385   1        min=At24c02Read(2);
 386   1        hour=At24c02Read(3);
 387   1        day=At24c02Read(4);
 388   1      }
 389          
 390           /*******************************************************************************
 391          * 函 数 名         : len_timer()
 392          * 函数功能       : 计时显示函数
 393          * 输    入         : 无
 394          * 输    出         : 无
 395          *******************************************************************************/
 396          void led_timer()         //计时函数
 397          {
 398   1          if(count_num==12500)
 399   1        {
 400   2          rather_s++; 
 401   2          count_num=0;
 402   2          OLED_ShowNum(64,6,rather_s,4,16);
 403   2        }
 404   1      
 405   1        if(led_num==12500)
 406   1        {
 407   2          s++;
 408   2          I2C_Write();
 409   2          led_num=0;
 410   2          OLED_ShowNum(72,0,s,2,16);
 411   2          if(s==60)
 412   2          {
 413   3            s=0;
 414   3            min++;
 415   3              I2C_Write();
 416   3            OLED_ShowNum(48,0,min,2,16);
 417   3            if(min==60)
 418   3            {
 419   4              min=0;
 420   4              hour++;
 421   4              OLED_ShowNum(24,0,hour,2,16);
 422   4              if(hour==60)
 423   4              {
 424   5                hour=0;
 425   5                day++;
C51 COMPILER V9.00   MAIN                                                                  12/28/2017 15:31:32 PAGE 8   

 426   5                OLED_ShowNum(0,0,day,2,16);
 427   5                if(day==30)
 428   5                {
 429   6                  day=0;
 430   6                }
 431   5              }
 432   4            }
 433   3          }
 434   2        }   
 435   1      }
 436          
 437          
 438            /*******************************************************************************
 439          * 函 数 名         : pwm_regulation_led_luminance() 
 440          * 函数功能       : PWM调节亮度
 441          * 输    入         : 无
 442          * 输    出         : 无
 443          *******************************************************************************/
 444          void pwm_regulation_led_luminance()   //调节led光亮
 445          {
 446   1        if(pwm_num>10)                      //10乘1ms（周期）
 447   1        {
 448   2          pwm_num=0;
 449   2        }   
 450   1        if(pwm_num < pwm_regulation)        //改变这个值可以改变直流电机的速度
 451   1        {
 452   2          pwm=1;
 453   2        }
 454   1        else
 455   1        {
 456   2          pwm=0;
 457   2          
 458   2        }
 459   1      }
 460          


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1917    ----
   CONSTANT SIZE    =     22    ----
   XDATA SIZE       =     44    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
