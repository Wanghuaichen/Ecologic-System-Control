C51 COMPILER V9.00   OLED                                                                  04/13/2018 20:40:12 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE OLED
OBJECT MODULE PLACED IN .\Objects\oled.obj
COMPILER INVOKED BY: C:\keil\C51\BIN\C51.EXE SRC\oled.c OPTIMIZE(8,SPEED) BROWSE INCDIR(.\I2C;.\SRC) DEBUG OBJECTEXTEND 
                    -PRINT(.\Listings\oled.lst) TABS(2) OBJECT(.\Objects\oled.obj)

line level    source

   1          #include "oled.h"
   2          #include "oledfont.h"    
   3          //#include "bmp.h"  
   4          
   5          //OLED的显存                float
   6          //存放格式如下.
   7          //[0]0 1 2 3 ... 127  
   8          //[1]0 1 2 3 ... 127  
   9          //[2]0 1 2 3 ... 127  
  10          //[3]0 1 2 3 ... 127  
  11          //[4]0 1 2 3 ... 127  
  12          //[5]0 1 2 3 ... 127  
  13          //[6]0 1 2 3 ... 127  
  14          //[7]0 1 2 3 ... 127         
  15          void delay_ms(unsigned int ms)
  16          {                         
  17   1        unsigned int a;
  18   1        while(ms)
  19   1        {
  20   2          a=1800;
  21   2          while(a--);
  22   2          ms--;
  23   2        }
  24   1        return;
  25   1      }
  26          #if OLED_MODE==1
              //向SSD1106写入一个字节。
              //dat:要写入的数据/命令
              //cmd:数据/命令标志 0,表示命令;1,表示数据;
              void OLED_WR_Byte(u8 dat,u8 cmd)
              {
                DATAOUT(dat);     
                if(cmd)
                  OLED_DC_Set();
                else 
                  OLED_DC_Clr();       
                OLED_CS_Clr();
                OLED_WR_Clr();   
                OLED_WR_Set();
                OLED_CS_Set();    
                OLED_DC_Set();   
              }             
              #else
  44          //向SSD1306写入一个字节。
  45          //dat:要写入的数据/命令
  46          //cmd:数据/命令标志 0,表示命令;1,表示数据;
  47          void OLED_WR_Byte(u8 dat,u8 cmd)
  48          { 
  49   1        u8 i;       
  50   1        if(cmd)
  51   1          OLED_DC_Set();
  52   1        else 
  53   1          OLED_DC_Clr();      
  54   1        OLED_CS_Clr();
C51 COMPILER V9.00   OLED                                                                  04/13/2018 20:40:12 PAGE 2   

  55   1        for(i=0;i<8;i++)
  56   1        {       
  57   2          OLED_SCLK_Clr();
  58   2          if(dat&0x80)
  59   2            {
  60   3             OLED_SDIN_Set();
  61   3            }
  62   2      else
  63   2             OLED_SDIN_Clr();
  64   2              OLED_SCLK_Set();
  65   2          dat<<=1;   
  66   2        }             
  67   1        OLED_CS_Set();
  68   1        OLED_DC_Set();      
  69   1      } 
  70          #endif
  71            void OLED_Set_Pos(unsigned char x, unsigned char y) 
  72          { 
  73   1        OLED_WR_Byte(0xb0+y,OLED_CMD);
  74   1        OLED_WR_Byte(((x&0xf0)>>4)|0x10,OLED_CMD);
  75   1        OLED_WR_Byte((x&0x0f)|0x01,OLED_CMD); 
  76   1      }       
  77          //开启OLED显示    
  78          ////void OLED_Display_On(void)
  79          ////{
  80          ////  OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
  81          ////  OLED_WR_Byte(0X14,OLED_CMD);  //DCDC ON
  82          ////  OLED_WR_Byte(0XAF,OLED_CMD);  //DISPLAY ON
  83          ////}
  84          //关闭OLED显示     
  85          ////void OLED_Display_Off(void)
  86          ////{
  87          ////  OLED_WR_Byte(0X8D,OLED_CMD);  //SET DCDC命令
  88          ////  OLED_WR_Byte(0X10,OLED_CMD);  //DCDC OFF
  89          ////  OLED_WR_Byte(0XAE,OLED_CMD);  //DISPLAY OFF
  90          ////}            
  91          //清屏函数,清完屏,整个屏幕是黑色的!和没点亮一样!!!    
  92          void OLED_Clear(void)  
  93          {  
  94   1        u8 i,n;       
  95   1        for(i=0;i<8;i++)  
  96   1        {  
  97   2          OLED_WR_Byte (0xb0+i,OLED_CMD);    //设置页地址（0~7）
  98   2          OLED_WR_Byte (0x00,OLED_CMD);      //设置显示位置―列低地址
  99   2          OLED_WR_Byte (0x10,OLED_CMD);      //设置显示位置―列高地址   
 100   2          for(n=0;n<128;n++)OLED_WR_Byte(0,OLED_DATA); 
 101   2        } //更新显示
 102   1      }
 103          
 104          
 105          //在指定位置显示一个字符,包括部分字符
 106          //x:0~127
 107          //y:0~63
 108          //mode:0,反白显示;1,正常显示         
 109          //size:选择字体 16/12 
 110          void OLED_ShowChar(u8 x,u8 y,u8 chr)
 111          {       
 112   1        unsigned char c=0,i=0;  
 113   1          c=chr-' ';//得到偏移后的值      
 114   1          if(x>Max_Column-1)
 115   1          {
 116   2            x=0;
C51 COMPILER V9.00   OLED                                                                  04/13/2018 20:40:12 PAGE 3   

 117   2            y+=2;
 118   2          }
 119   1          if(SIZE ==16)
 120   1          {
 121   2            OLED_Set_Pos(x,y);  
 122   2            for(i=0;i<8;i++)   
 123   2            OLED_WR_Byte(F8X16[c*16+i],OLED_DATA);
 124   2            OLED_Set_Pos(x,y+1);
 125   2            for(i=0;i<8;i++)  
 126   2            OLED_WR_Byte(F8X16[c*16+i+8],OLED_DATA);
 127   2          }
 128   1      //    else {  
 129   1      //      OLED_Set_Pos(x,y+1);
 130   1      //      for(i=0;i<6;i++)
 131   1      //      {
 132   1      //        OLED_WR_Byte(F6x8[c][i],OLED_DATA);
 133   1      //      }
 134   1      //    }
 135   1      }
 136          //m^n函数
 137          u32 oled_pow(u8 m,u8 n)
 138          {
 139   1        u32 result=1;  
 140   1        while(n--)result*=m;    
 141   1        return result;
 142   1      }         
 143          //显示2个数字
 144          //x,y :起点坐标  
 145          //len :数字的位数
 146          //size:字体大小
 147          //mode:模式 0,填充模式;1,叠加模式
 148          //num:数值(0~4294967295);       
 149          void OLED_ShowNum(u8 x,u8 y,u32 num,u8 len,u8 size2)
 150          {           
 151   1        u8 t,temp;
 152   1        u8 enshow=0;               
 153   1        for(t=0;t<len;t++)
 154   1        {
 155   2          temp=(num/oled_pow(10,len-t-1))%10;
 156   2          if(enshow==0&&t<(len-1))
 157   2          {
 158   3            if(temp==0)
 159   3            {
 160   4              OLED_ShowChar(x+(size2/2)*t,y,' ');
 161   4              continue;
 162   4            }else enshow=1;    
 163   3          }
 164   2          OLED_ShowChar(x+(size2/2)*t,y,temp+'0'); 
 165   2        }
 166   1      } 
 167          //显示一个字符号串
 168          void OLED_ShowString(u8 x,u8 y,u8 *chr)
 169          {
 170   1        unsigned char j=0;
 171   1        while (chr[j]!='\0')
 172   1        {   OLED_ShowChar(x,y,chr[j]);
 173   2            x+=8;
 174   2          if(x>120){x=0;y+=2;}
 175   2            j++;
 176   2        }
 177   1      }
 178          //显示汉字
C51 COMPILER V9.00   OLED                                                                  04/13/2018 20:40:12 PAGE 4   

 179          //void OLED_ShowCHinese(u8 x,u8 y,u8 no)
 180          //{               
 181          //  u8 t,adder=0;
 182          //  OLED_Set_Pos(x,y);  
 183          //    for(t=0;t<16;t++)
 184          //    {
 185          //        OLED_WR_Byte(Hzk[2*no][t],OLED_DATA);
 186          //        adder+=1;
 187          //     }  
 188          //    OLED_Set_Pos(x,y+1);  
 189          //    for(t=0;t<16;t++)
 190          //      { 
 191          //        OLED_WR_Byte(Hzk[2*no+1][t],OLED_DATA);
 192          //        adder+=1;
 193          //      }         
 194          //}
 195          /***********功能描述：显示显示BMP图片128×64起始点坐标(x,y),x的范围0～127，y为页的范围0～7****************
             -*/
 196          ////void OLED_DrawBMP(unsigned char x0, unsigned char y0,unsigned char x1, unsigned char y1,unsigned char 
             -BMP[])
 197          ////{   
 198          //// unsigned int j=0;
 199          //// unsigned char x,y;
 200          ////  
 201          ////  if(y1%8==0) y=y1/8;      
 202          ////  else y=y1/8+1;
 203          ////  for(y=y0;y<y1;y++)
 204          ////  {
 205          ////    OLED_Set_Pos(x0,y);
 206          ////    for(x=x0;x<x1;x++)
 207          ////      {      
 208          ////        OLED_WR_Byte(BMP[j++],OLED_DATA);       
 209          ////      }
 210          ////  }
 211          ////} 
 212          
 213          
 214          //初始化SSD1306             
 215          void OLED_Init(void)
 216          {
 217   1        OLED_RST_Set();
 218   1        delay_ms(100);
 219   1        OLED_RST_Clr();
 220   1        delay_ms(100);
 221   1        OLED_RST_Set(); 
 222   1      
 223   1        OLED_WR_Byte(0xAE,OLED_CMD);//--turn off oled panel
 224   1        OLED_WR_Byte(0x00,OLED_CMD);//---set low column address
 225   1        OLED_WR_Byte(0x10,OLED_CMD);//---set high column address
 226   1        OLED_WR_Byte(0x40,OLED_CMD);//--set start line address  Set Mapping RAM Display Start Line (0x00~0x3F)
 227   1        OLED_WR_Byte(0x81,OLED_CMD);//--set contrast control register
 228   1        OLED_WR_Byte(0xCF,OLED_CMD);//--Set SEG Output Current Brightness
 229   1        OLED_WR_Byte(0xA1,OLED_CMD);//--Set SEG/Column Mapping     0xa0左右反置 0xa1正常
 230   1        OLED_WR_Byte(0xC8,OLED_CMD);//--Set COM/Row Scan Direction   0xc0上下反置 0xc8正常
 231   1        OLED_WR_Byte(0xA6,OLED_CMD);//--set normal display
 232   1        OLED_WR_Byte(0xA8,OLED_CMD);//--set multiplex ratio(1 to 64)
 233   1        OLED_WR_Byte(0x3f,OLED_CMD);//--1/64 duty
 234   1        OLED_WR_Byte(0xD3,OLED_CMD);//--set display offset  Shift Mapping RAM Counter (0x00~0x3F)
 235   1        OLED_WR_Byte(0x00,OLED_CMD);//--not offset
 236   1        OLED_WR_Byte(0xd5,OLED_CMD);//--set display clock divide ratio/oscillator frequency
 237   1        OLED_WR_Byte(0x80,OLED_CMD);//--set divide ratio, Set Clock as 100 Frames/Sec
 238   1        OLED_WR_Byte(0xD9,OLED_CMD);//--set pre-charge period
C51 COMPILER V9.00   OLED                                                                  04/13/2018 20:40:12 PAGE 5   

 239   1        OLED_WR_Byte(0xF1,OLED_CMD);//--Set Pre-Charge as 15 Clocks & Discharge as 1 Clock
 240   1        OLED_WR_Byte(0xDA,OLED_CMD);//--set com pins hardware configuration
 241   1        OLED_WR_Byte(0x12,OLED_CMD);
 242   1        OLED_WR_Byte(0xDB,OLED_CMD);//--set vcomh
 243   1        OLED_WR_Byte(0x40,OLED_CMD);//--Set VCOM Deselect Level
 244   1        OLED_WR_Byte(0x20,OLED_CMD);//--Set Page Addressing Mode (0x00/0x01/0x02)
 245   1        OLED_WR_Byte(0x02,OLED_CMD);//
 246   1        OLED_WR_Byte(0x8D,OLED_CMD);//--set Charge Pump enable/disable
 247   1        OLED_WR_Byte(0x14,OLED_CMD);//--set(0x10) disable
 248   1        OLED_WR_Byte(0xA4,OLED_CMD);// --Disable Entire Display On (0xa4/0xa5)
 249   1        OLED_WR_Byte(0xA6,OLED_CMD);// --Disable Inverse Display On (0xa6/a7) 
 250   1        OLED_WR_Byte(0xAF,OLED_CMD);//--turn on oled panel
 251   1        
 252   1        OLED_WR_Byte(0xAF,OLED_CMD); /*display ON*/ 
 253   1        OLED_Clear();
 254   1        OLED_Set_Pos(0,0);  
 255   1      }  
 256          
 257          //==============================================================
 258          //函数名：  void LED_PrintValueI(uchar x, uchar y, int data);
 259          //功能描述：将一个int型数转换成5位数进行显示
 260          //参数：x的范围为0～120，y为页的范围0～7，data为需要转化显示的数值
 261          //返回：无
 262          //==============================================================
 263          ////void LED_PrintValueI(u8 x, u8 y, int date)
 264          ////{
 265          ////  u8 i,j,k,l,m;  
 266          ////  if(date < 0)
 267          ////  {
 268          ////    OLED_ShowChar(x,y,'-');
 269          ////    date = - date;  
 270          ////  }
 271          ////  else
 272          ////  {
 273          ////    OLED_ShowChar(x,y,'+');
 274          ////  }
 275          ////  
 276          ////  l  = date/10000;
 277          ////  m= (date%10000)/1000;
 278          ////  i = (date%1000)/100;
 279          ////  j = (date%100)/10;
 280          ////  k = date%10;
 281          ////  OLED_ShowChar(x+8,y,l+48);
 282          ////  OLED_ShowChar(x+16,y,m+48);
 283          ////  OLED_ShowChar(x+24,y,i+48);
 284          ////  OLED_ShowChar(x+32,y,j+48);
 285          ////  OLED_ShowChar(x+40,y,k+48);
 286          ////}
 287          
 288          //=====================================
 289          //// void LED_PrintValueFP(u8 x, u8 y, u16 date, u8 num)
 290          //// {
 291          ////  u8 m,i,j,k;   
 292          ////  OLED_ShowChar(x, y, '.');
 293          ////  m= date/1000;
 294          ////  i = (date%1000)/100;
 295          ////  j = (date%100)/10;
 296          ////  k = date%10;
 297          ////  switch(num)
 298          ////  {
 299          ////    case 1:   OLED_ShowChar(x+8,y,k+48);
 300          ////        break;
C51 COMPILER V9.00   OLED                                                                  04/13/2018 20:40:12 PAGE 6   

 301          ////    case 2:   OLED_ShowChar(x+8,y,j+48);
 302          ////        OLED_ShowChar(x+16,y,k+48);
 303          ////        break;
 304          ////    case 3:         OLED_ShowChar(x+6,y,i+48);
 305          ////        OLED_ShowChar(x+16,y,j+48);
 306          ////        OLED_ShowChar(x+24,y,k+48);
 307          ////        break;
 308          ////    case 4:   OLED_ShowChar(x+6,y,m+48);
 309          ////        OLED_ShowChar(x+16,y,i+48);
 310          ////        OLED_ShowChar(x+24,y,j+48);
 311          ////        OLED_ShowChar(x+30,y,k+48);
 312          ////        break;  
 313          ////  }
 314          //// }
 315          
 316          //==============================================================
 317          //函数名：   void LED_PrintValueF(uchar x, uchar y, float data, uchar num);
 318          //功能描述：将一个float型数转换成整数部分5位带小数和符号的数据并进行显示
 319          //参数：x的范围为0～62，y为页的范围0～7，data为需要转化显示的数值整数部分最多位5位  num表示保留的小数位0~4
 320          //返回：无
 321          //num小数位数最多四位
 322          //==============================================================
 323          // void LED_PrintValueF(u8 x, u8 y, float date, u8 num)
 324          // {
 325          //  u8 l,m,i,j,k;  //万千百十个
 326          //  u8 databiti = 6; //整数位数
 327          //  u16 tempdataui = 0;
 328          //    int tempdataii = (int)date; //整数部分
 329          //  long int tempdatalp = (long int)((date - (int)date)*10000); //取小数位后4位
 330          //  
 331          //  //整数部分显示
 332          //  if(date < 0.0000001)  OLED_ShowChar(x, y,'-'); 
 333          //  else OLED_ShowChar(x, y,'+');
 334          //  if(tempdataii < 0)tempdataii = - tempdataii;  //去掉整数部分负号
 335          //  tempdataui = tempdataii;
 336          //  l  = tempdataui/10000;
 337          //  m= (tempdataui%10000)/1000;
 338          //  i = (tempdataui%1000)/100;
 339          //  j = (tempdataui%100)/10;
 340          //  k = tempdataui%10;
 341          //  if (l != 0)  //五位
 342          //  {
 343          //    OLED_ShowChar(x+8,y,l+48);
 344          //    OLED_ShowChar(x+16,y,m+48);
 345          //    OLED_ShowChar(x+24,y,i+48);
 346          //    OLED_ShowChar(x+32,y,j+48);
 347          //    OLED_ShowChar(x+40,y,k+48);
 348          //  }
 349          //  else if(m != 0) //四位
 350          //  {
 351          //    databiti = 5;
 352          //    OLED_ShowChar(x+8,y,l+48);
 353          //    OLED_ShowChar(x+16,y,m+48);
 354          //    OLED_ShowChar(x+24,y,i+48);
 355          //    OLED_ShowChar(x+32,y,j+48);
 356          //  }
 357          //    else if(i != 0) //三位
 358          //    {
 359          //      databiti = 4;
 360          //    OLED_ShowChar(x+8,y,l+48);
 361          //    OLED_ShowChar(x+16,y,m+48);
 362          //    OLED_ShowChar(x+24,y,i+48);
C51 COMPILER V9.00   OLED                                                                  04/13/2018 20:40:12 PAGE 7   

 363          //    }
 364          //    else if(j != 0) //两位
 365          //    {
 366          //        databiti = 3; 
 367          //    OLED_ShowChar(x+8,y,l+48);
 368          //    OLED_ShowChar(x+16,y,m+48);
 369          //    }
 370          //  else  
 371          //  {
 372          //    databiti = 2;
 373          //    OLED_ShowChar(x+8,y,l+48);
 374          //  } 
 375          //  if(tempdatalp < 0)tempdatalp = - tempdatalp;  //去掉小数部分负号
 376          //  switch(num)
 377          //  {
 378          //    case 0: break;
 379          //    case 1:  LED_PrintValueFP(x + databiti *8 , y, (unsigned int)(tempdatalp / 1000),num);break;
 380          //    case 2:  LED_PrintValueFP(x + databiti *8, y, (unsigned int)(tempdatalp / 100),num);break;
 381          //    case 3:  LED_PrintValueFP(x + databiti *8, y, (unsigned int)(tempdatalp / 10),num);break;
 382          //    case 4:  LED_PrintValueFP(x + databiti *8, y, (unsigned int)(tempdatalp),num);break;          
 383          //  }
 384          // }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    620    ----
   CONSTANT SIZE    =   1520    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      16
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
